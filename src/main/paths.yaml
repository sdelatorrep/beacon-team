/:
  get:
    description: Get information about Beacon
    operationId: getBeacon
    produces:
      - application/json
    responses:
      '200':
        description: OK / Call is successful
        schema:
          items:
            $ref: '#/definitions/Beacon'
/query:
  get:
    description: Get response to a Beacon query for allele information.
    operationId: getBeaconAlleleResponse
    produces:
      - application/json
    parameters:
      - name: referenceName
        description: 'Reference name (chromosome). Accepting values 1-22, X, Y.'
        in: query
        required: true
        type: string
        enum: 
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 19
          - 20
          - 21
          - 22
          - X 
          - Y
      - name: start
        description: |
          Precise start coordinate position, allele locus (0-based).
          * start only:
            - for single positions, e.g. the start of a specified sequence alteration where the size is given through the specified alternateBases
            - typical use are queries for SNV and small InDels
            - the use of "start" without an "end" parameter requires the use of "referenceBases"
          * start and end:
            - special use case for exactly determined structural changes
          * startMin + startMax + endMin + endMax
            - for querying imprecise positions (e.g. identifying all structural variants starting anywhere between startMin <-> startMax, and ending anywhere between endMin <-> endMax
            - single or douple sided precise matches can be achieved by setting startMin = startMax XOR endMin = endMax
        in: query
        required: true
        type: integer
        format: int64
        minimum: 0
      - name: startMin
        description: 'Minimum start coordinate'
        type: string
        in: query
      - name: startMax
        description: 'Maximum start coordinate'
        type: string
        in: query
      - name: end
        description: 'Precise end coordinate'
        type: string
        in: query
      - name: endMin
        description: 'Minimum end coordinate'
        type: string
        in: query
      - name: endMax
        description: 'Maximum end coordinate'
        type: string
        in: query
      - name: referenceBases
        description: |
          Reference bases for this variant (starting from `start`). 
          For accepted values see the REF field in VCF 4.2 specification.
        in: query
        required: true
        type: string
        enum:
          - A
          - C
          - G
          - T
          - N
      - name: alternateBases
        description: |
          The bases that appear instead of the reference bases. 
          For accepted values see the ALT field in VCF 4.2 specification.
        in: query
        required: true
        type: string
      - name: assemblyId
        description: 'Assembly identifier (GRC notation, e.g. GRCh37).'
        in: query
        required: true
        type: string    
      - name: datasetIds
        description: >-
          Identifiers of datasets, as defined in "BeaconDataset". If this field is null/not specified, all datasets should be queried.
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: includeDatasetResponses
        description: |
          Indicator of whether responses for individual datasets (datasetAlleleResponses) should be included in the response (BeaconAlleleResponse) to this request or not. 
          If null (not specified), the default value of NONE is assumed.
        in: query
        required: false
        type: string
        enum: 
          - ALL
          - HIT
          - MISS
          - NONE
    responses:
      '200':
        description: OK / Call is successful
        schema:
          items:
            $ref: '#/definitions/BeaconAlleleResponse'
      '400':
        description: Bad request (e.g. missing mandatory parameter)
        schema:
          $ref: '#/definitions/BeaconAlleleResponse'
          
      '401':
        description: Unauthorised (e.g. when an unauthenticated user tries to access a protected resource)
        schema:
          $ref: '#/definitions/BeaconAlleleResponse'
      '403':
        description: Forbidden (e.g. the resource is protected for all users or the user is authenticated but s/he is not granted for this resource)
        schema:
          $ref: '#/definitions/BeaconAlleleResponse'
  post:
    description: Gets response to a beacon query for allele information.
    operationId: postBeaconAlleleResponse
    produces:
      - application/json
    parameters:
      - name: queryBeaconAllele
        in: body
        required: true
        schema:
          $ref: '#/definitions/BeaconAlleleRequest'
    responses:
      '200':
        description: OK / Call is successful
        schema:
          items:
            $ref: '#/definitions/BeaconAlleleResponse'
      '400':
        description: Bad request (e.g. missing mandatory parameter)
        schema:
          $ref: '#/definitions/BeaconAlleleResponse'
          
      '401':
        description: Unauthorised (e.g. when an unauthenticated user tries to access a protected resource)
        schema:
          $ref: '#/definitions/BeaconAlleleResponse'
      '403':
        description: Forbidden (e.g. the resource is protected for all users or the user is authenticated but s/he is not granted for this resource)
        schema:
          $ref: '#/definitions/BeaconAlleleResponse'
